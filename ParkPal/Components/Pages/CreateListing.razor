@page "/CreateListing"
@using ParkPal.Components.Layout
@layout TopNav

<head>
    <meta charset="UTF-8">
    <title>Create Listing</title>
    <style>
        
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
            color: #333;
        }

        .listing-form {
            width: 60%;
            margin: 50px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
        }

        label {
            display: block;
            margin-top: 15px;
        }

        input[type="text"],
        input[type="number"],
        textarea,
        input[type="date"],
        input[type="time"] {
            width: calc(100% - 30px);
            padding: 10px;
            margin-top: 5px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        input[type="submit"] {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #3D42F3;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease-in-out;
        }

            input[type="submit"]:hover {
                background-color: #5ab9ea;
            }

        input[type="file"] {
            margin-top: 5px;
        }

        #map {
            height: 300px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
    </style>
    <script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?key=YOUR_BING_MAPS_API_KEY'></script>
</head>
<body>

    <EditForm class="listing-form" Model="@listing" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="title">Title:</label>
        <InputText id="title" @bind-Value="listing.Title" />
    </div>
    <div>
        <label for="price">Price Per Day:</label>
        <InputNumber id="price" @bind-Value="listing.Price" min="0" />
    </div>

     <div>
        <label for="start-date">Start Date:</label>
        <InputDate id="start-date" @bind-Value="listing.StartDate" />
    </div>

    <div>
        <label for="start-time">Start Time:</label>
        <InputDate id="start-time" @bind-Value="listing.StartTime" />
    </div>

    <div>
        <label for="end-date">End Date:</label>
        <InputDate id="end-date" @bind-Value="listing.EndDate" />
    </div>

    <div>
        <label for="end-time">End Time:</label>
        <InputDate id="end-time" @bind-Value="listing.EndTime" />
    </div>

    <div>
        <label for="address">Address:</label>
        <InputText id="address" @bind-Value="listing.Address" @onchange="HandleAddressChange" />
        <button @onclick="GetCoordinates">Get Coordinates</button>
    </div>

    <div>
        <label>Latitude:</label>
        <span>@listing.Latitude</span>
    </div>

    <div>
        <label>Longitude:</label>
        <span>@listing.Longitude</span>
    </div>

    <div>
        <label for="description">Description:</label>
        <InputTextArea id="description" @bind-Value="listing.Description" />
    </div>

    <div>
        <label for="additional-notes">Additional Notes:</label>
        <InputTextArea id="additional-notes" @bind-Value="listing.AdditionalNotes" />
    </div>

    <div>
        <label for="images">Upload Images:</label>
        <InputFile id="images" @bind-Value="listing.Images" accept="image/*" multiple />
    </div>

        <!--  Map -->
        <div id="map" style="position:relative;width:600px;height:400px;"></div>

        <button type="button" onclick="showOnMap()">Show on Map</button>

    </EditForm>

    <!--
        Initializes and sets up the Bing Maps API
       This function creates a map based on the address inputed,
         and shows it on the map -->
    @code {
    private ListingModel listing = new ListingModel();

    private async Task HandleValidSubmit()
    {
        // Logic to add the listing to the database
        await ListingService.AddListingAsync(listing);
    }
}

    <script>
        let map;

        function initMap() {
            map = new Microsoft.Maps.Map(document.getElementById('map'), {
                credentials: 'AtqNLHA6sIAE94ZXG6Nzm1tNb_igZu-VlDagoYFnsPc0LL1-v96Pju5pS8VyPTF8',
                center: new Microsoft.Maps.Location(0, 0),
                zoom: 2
            });
        }

        window.onload = function () {
            initMap();
        };

        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                showOnMap();
            }
        }

        function showOnMap() {
            let addressInput = document.getElementById('address').value;
            if (addressInput.trim() !== '') {
                fetch(`https://dev.virtualearth.net/REST/v1/Locations?query=${encodeURIComponent(addressInput)}&key=AtqNLHA6sIAE94ZXG6Nzm1tNb_igZu-VlDagoYFnsPc0LL1-v96Pju5pS8VyPTF8`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.resourceSets.length > 0 && data.resourceSets[0].resources.length > 0) {
                            let location = data.resourceSets[0].resources[0].point.coordinates;
                            map.setView({ center: new Microsoft.Maps.Location(location[0], location[1]), zoom: 14 });
                            const pin = new Microsoft.Maps.Pushpin(map.getCenter(), {
                                color: 'blue',
                                draggable: false
                            });
                            map.entities.push(pin);
                        } else {
                            alert('Location not found');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            } else {
                alert('enter an address');
            }
            document.getElementById('latitude').value = location[0];
            document.getElementById('longitude').value = location[1];
        }
    </script>
    @inject IJSRuntime JSRuntime

    <InputText @bind-Value="listing.Address" @onchange="GetCoordinatesFromAddress" />




    }



</body>







