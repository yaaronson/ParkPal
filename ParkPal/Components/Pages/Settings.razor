@page "/settings"
@using ParkPal.Components.Layout
@layout TopNav

<head>
    <meta charset="UTF-8">
    <title>Settings</title>
    <link rel="stylesheet" href="/bootstrap/CSS/darkmode.css">
    <link rel="stylesheet" href="/bootstrap/CSS/Parkpaldesign.css">
</head>
<body>
    <div class="settings-container">
        <h2 data-translate="settings">Settings</h2>

        <div class="setting-option">
            <label for="language" data-translate="selectLanguage">Select Language:</label>
            <div class="custom-dropdown">
                <select id="language" onchange="changeLanguage()">
                    <option value="en">English</option>
                    <option value="es">Spanish</option>
                </select>
            </div>
        </div>

        <div class="setting-option">
            <label for="notifications" data-translate="enableNotifications">Enable Notifications:</label>
            <input type="checkbox" id="notifications">
        </div>

        <div class="setting-option">
            <label for="modeSwitch" data-translate="darkMode">Dark Mode:</label>
            <label class="switch">
                <input type="checkbox" id="modeSwitch" onchange="toggleDarkMode()">
                <span class="slider"></span>
            </label>
        </div>

        <div class="setting-option">
            <button class="save-btn" onclick="saveSettings()" data-translate="saveSettings">Save Settings</button>
        </div>

        <script>
            // Translations object for different languages
            const translations = {
                en: {
                    settings: 'Settings',
                    selectLanguage: 'Select Language:',
                    enableNotifications: 'Enable Notifications:',
                    darkMode: 'Dark Mode:',
                    saveSettings: 'Save Settings'
                },
                es: {
                    settings: 'Configuración',
                    selectLanguage: 'Seleccionar Idioma:',
                    enableNotifications: 'Habilitar Notificaciones:',
                    darkMode: 'Modo Oscuro:',
                    saveSettings: 'Guardar Configuración'
                }
            };

            // Loads saved settings
            function loadSettings() {
                const languageSelect = document.getElementById('language');
                const savedLanguage = localStorage.getItem('language') || 'en';
                languageSelect.value = savedLanguage;
                translatePage(savedLanguage);

                const darkModeSwitch = document.getElementById('modeSwitch');
                const savedMode = localStorage.getItem('darkMode') === 'true';
                darkModeSwitch.checked = savedMode;
                setDarkMode(savedMode);
            }

            // changes language

            function changeLanguage() {
                const languageSelect = document.getElementById('language');
                const selectedLanguage = languageSelect.value;
                translatePage(selectedLanguage);
            }

            //  translates the page based on the  language selected

            function translatePage(lang) {
                const elements = document.querySelectorAll('[data-translate]');
                elements.forEach(element => {
                    const key = element.getAttribute('data-translate');
                    element.textContent = translations[lang][key];
                });
            }

            //  saves settings
            function saveSettings() {
                const languageSelect = document.getElementById('language');
                localStorage.setItem('language', languageSelect.value);
                alert('Settings saved!');
                loadSettings();
            }

            //  toggles dark mode
            function setDarkMode(isDark) {
                const body = document.body;
                if (isDark) {
                    body.classList.add('dark-mode');
                } else {
                    body.classList.remove('dark-mode');
                }
                localStorage.setItem('darkMode', isDark);
            }

            function toggleDarkMode() {
                const darkModeSwitch = document.getElementById('modeSwitch');
                setDarkMode(darkModeSwitch.checked);
            }

            document.addEventListener('DOMContentLoaded', () => {
                loadSettings();
            });
        </script>
        <script src="/bootstrap/JS/darkmode.js"></script>
    </div>
</body>

